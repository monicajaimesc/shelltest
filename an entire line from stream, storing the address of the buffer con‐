GETLINE(3)                       Linux Programmer's Manual                       GETLINE(3)



NNAAMMEE
       getline, getdelim - delimited string input

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssttddiioo..hh>>

       ssssiizzee__tt ggeettlliinnee((cchhaarr ****_l_i_n_e_p_t_r,, ssiizzee__tt **_n,, FFIILLEE **_s_t_r_e_a_m));;

       ssssiizzee__tt ggeettddeelliimm((cchhaarr ****_l_i_n_e_p_t_r,, ssiizzee__tt **_n,, iinntt _d_e_l_i_m,, FFIILLEE **_s_t_r_e_a_m));;

   Feature Test Macro Requirements for glibc (see ffeeaattuurree__tteesstt__mmaaccrrooss(7)):

       ggeettlliinnee(), ggeettddeelliimm():
           Since glibc 2.10:
               _POSIX_C_SOURCE >= 200809L || _XOPEN_SOURCE >= 700
           Before glibc 2.10:
               _GNU_SOURCE

DDEESSCCRRIIPPTTIIOONN
       ggeettlliinnee()  reads  an entire line from _s_t_r_e_a_m, storing the address of the buffer con‐
       taining the text into _*_l_i_n_e_p_t_r.  The buffer is null-terminated and includes the new‐
       line character, if one was found.

       If  _*_l_i_n_e_p_t_r  is  NULL,  then ggeettlliinnee() will allocate a buffer for storing the line,
       which should be freed by the user program.  (In  this  case,  the  value  in  _*_n  is
       ignored.)

       Alternatively,  before  calling  ggeettlliinnee(), _*_l_i_n_e_p_t_r can contain a pointer to a mmaall‐‐
       lloocc(3)-allocated buffer _*_n bytes in size.  If the buffer is not large enough to hold
       the  line,  ggeettlliinnee() resizes it with rreeaalllloocc(3), updating _*_l_i_n_e_p_t_r and _*_n as neces‐
       sary.

       In either case, on a successful call, _*_l_i_n_e_p_t_r and _*_n will be updated to reflect the
       buffer address and allocated size respectively.

       ggeettddeelliimm() works like ggeettlliinnee(), except that a line delimiter other than newline can
       be specified as the _d_e_l_i_m_i_t_e_r argument.  As with ggeettlliinnee(), a delimiter character is
       not added if one was not present in the input before end of file was reached.

RREETTUURRNN VVAALLUUEE
       On success, ggeettlliinnee() and ggeettddeelliimm() return the number of characters read, including
       the delimiter character, but not including the terminating null byte  ('\0').   This
       value can be used to handle embedded null bytes in the line read.

       Both  functions  return  -1  on failure to read a line (including end-of-file condi‐
       tion).  In the event of an error, _e_r_r_n_o is set to indicate the cause.

EERRRROORRSS
       EEIINNVVAALL Bad arguments (_n or _l_i_n_e_p_t_r is NULL, or _s_t_r_e_a_m is not valid).

VVEERRSSIIOONNSS
       These functions are available since libc 4.6.27.

CCOONNFFOORRMMIINNGG TTOO
       Both ggeettlliinnee() and ggeettddeelliimm() were originally GNU extensions.  They  were  standard‐
       ized in POSIX.1-2008.

EEXXAAMMPPLLEE
       #define _GNU_SOURCE
       #include <stdio.h>
       #include <stdlib.h>

       int
       main(void)
       {
           FILE *fp;
           char *line = NULL;
           size_t len = 0;
           ssize_t read;

           fp = fopen("/etc/motd", "r");
           if (fp == NULL)
               exit(EXIT_FAILURE);

           while ((read = getline(&line, &len, fp)) != -1) {
               printf("Retrieved line of length %zu :\n", read);
               printf("%s", line);
           }

           free(line);
           exit(EXIT_SUCCESS);
       }

SSEEEE AALLSSOO
       rreeaadd(2), ffggeettss(3), ffooppeenn(3), ffrreeaadd(3), ggeettss(3), ssccaannff(3)

CCOOLLOOPPHHOONN
       This  page is part of release 3.54 of the Linux _m_a_n_-_p_a_g_e_s project.  A description of
       the  project,  and   information   about   reporting   bugs,   can   be   found   at
       http://www.kernel.org/doc/man-pages/.



GNU                                      2013-04-19                              GETLINE(3)
